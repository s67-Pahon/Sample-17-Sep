void setup() {
    size(500, 500);
    strokeWeight(5);
    background(255);

    // 2D array of sample values
    int[][] grid = {{1, 2, 1, 3}, {3, 4, 1, 2}, {2, 1, 3, 4}};

    int rows = grid.length;
    int cols = grid[0].length;

    int w = width / cols;
    int h = height / rows;

    update(grid, 0);
    int i = 0;
    while (i < rows) {

        int j = 0;
        while (j < cols) {

            draw_lines(10 + j * w, 10 + i * h, grid[i][j], w);
            
            draw_grid_boundary(10 + j * w, 10 + i * h, w, h);
            println(i, j, grid[i][j]);
            j++;
        }

        i++;
    }
}

void update(int[][] a, int d) { // array is passed by reference?
    int i = 0;
    while (i < a.length) {

        int j = 0;
        while (j < a[0].length) {

            a[i][j] = a[i][j] + d;
            j++;
        }

        i++;
    }
}

void draw_lines(int x, int y, int n, int w) {
    int i = 0;
    int margin = 20;
    while (i < n) {

        line(x + margin + i * ( w / 5), y , x + margin + i * (w / 5), y + 40);
        i++;
    }
}

// Function to draw a rectangle for the grid boundary
void draw_grid_boundary(int x, int y, int w, int h) {
    noFill();
    stroke(0);
    rect(x, y, w, h); // Draws the rectangle grid boundary
}

